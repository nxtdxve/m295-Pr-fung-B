openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: Generiert von ChatGPT
servers:
  - url: http://localhost:3000
paths:
  /login:
    post:
      summary: Login
      tags: 
      - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        400:
          description: Bad Request (missing/invalid email or password)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        401:
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /verify:
    get:
      summary: Verify login status
      tags: 
      - authentication
      responses:
        200:
          description: Currently logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        401:
          description: Not logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /logout:
    delete:
      summary: Logout
      tags: 
      - authentication
      responses:
        204:
          description: Successfully logged out
        401:
          description: Not logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /tasks:
    get:
      summary: Get all tasks
      responses:
        200:
          description: Successfully retrieved tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
                - title
      responses:
        201:
          description: Successfully created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        406:
          description: Title is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successfully retrieved task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                finishedDate:
                  type: string
                  format: date
              required:
                - title
      responses:
        200:
          description: Successfully updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        406:
          description: Title is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Delete a task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Successfully deleted task
        404:
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        creationDate:
          type: string
          format: date
        finishedDate:
          type: string
          format: date
        creator:
          type: string
      required:
        - id
        - title
        - creationDate
        - creator
